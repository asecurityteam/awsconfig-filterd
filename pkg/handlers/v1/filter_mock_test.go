// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/filter.go

// Package v1 is a generated GoMock package.
package v1

import (
	domain "github.com/asecurityteam/awsconfig-filterd/pkg/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfigFilter is a mock of ConfigFilter interface
type MockConfigFilter struct {
	ctrl     *gomock.Controller
	recorder *MockConfigFilterMockRecorder
}

// MockConfigFilterMockRecorder is the mock recorder for MockConfigFilter
type MockConfigFilterMockRecorder struct {
	mock *MockConfigFilter
}

// NewMockConfigFilter creates a new mock instance
func NewMockConfigFilter(ctrl *gomock.Controller) *MockConfigFilter {
	mock := &MockConfigFilter{ctrl: ctrl}
	mock.recorder = &MockConfigFilterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigFilter) EXPECT() *MockConfigFilterMockRecorder {
	return m.recorder
}

// Filter mocks base method
func (m *MockConfigFilter) Filter(arg0 domain.ConfigurationItem) (bool, error) {
	ret := m.ctrl.Call(m, "Filter", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Filter indicates an expected call of Filter
func (mr *MockConfigFilterMockRecorder) Filter(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Filter", reflect.TypeOf((*MockConfigFilter)(nil).Filter), arg0)
}
